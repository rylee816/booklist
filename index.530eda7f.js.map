{"mappings":"AACA,MAAMA,KACFC,YAAYC,EAAOC,EAAQC,GACvBC,KAAKH,MAAQA,EACbG,KAAKF,OAASA,EACdE,KAAKD,KAAOA,GAKpB,MAAME,GAEFC,sBACkBC,MAAMC,WAEdC,SAAQC,GAAQL,GAAGM,cAAcD,KAG3CJ,qBAAqBI,GAClB,MAAME,EAAOC,SAASC,cAAc,cAE9BC,EAAO,wBASRL,EAAAP,yBACRO,EAAAT,8BAEMS,EAAWR,+BACRQ,EAAAP,oIAKTS,EAAKI,mBAAiB,YAAYD,wBAInCF,SAAOC,cAAmB,cAAAG,0BAGRP,YACJI,cAAS,SAAAI,YAAAR,oBACPA,EAAGS,QAAAC,mBACN,6BAEHC,gBAGDA,OACI,YACI,CACAC,QAAO,2BACVC,MAAA,iBAGL,UACI,UACI,CACAD,QAAO,8BACVC,MAAA,gBAGD,UAAS,SAChBD,EAAA,CAESA,QAAS,6BAEhBC,MAAA,iBAMJ,MACK,QACG,OAAA,KAGd,IAAAC,EAAAX,SAAAC,cAAA,QAGDW,EAAA,qBAAiCH,EAAAC,iCAC3BD,EAAKA,yBAEHE,EAAAR,mBAAqB,aAAAS,eACjB,cACSX,cAAE,UAAsBY,+CAiBxC,IAAAC,EAAAC,OAAAC,aAAAC,QAAA,UAPgB,CAChB,CAEM7B,MAAY,uBACTC,OAAQ,kBAQd,OAHmByB,EAAA,OAAhBC,OAAAC,aAAgBC,QAAA,SAAA,GACRC,KAAGC,MAAMJ,OAAWC,aAAAC,QAAA,UAEzBH,iBAIJjB,GACF,MAAMiB,EAACpB,MAAaC,WACvBmB,EAAAM,KAAAvB,GACJkB,OAAAC,aAAAK,QAAA,QAAAH,KAAAI,UAAAR,IAGDrB,kBAASH,GAET,MAAAwB,EAAmBpB,MAAAC,WACXmB,EAAClB,SAAa,CAACC,EAAA0B,KACnB1B,EAAiBP,OAAAA,GAAAwB,EAAAU,OAAAD,EAAA,MAGjBR,OAAAC,aAAAK,QAA8B,QAAAH,KAAAI,UAAAR,cAK9BW,iBAAA,mBAA2BjC,GAAAkC,uBAK3BzB,cAAA,cAAqBwB,iBAAA,UAAAE,IAGrBA,EAAAC,iBAGA,MAAAxC,EAAAY,SAAoBC,cAAA,UAAA4B,MACdxC,EAAQW,SAAKC,cAAA,WAAA4B,MAEnBvC,EAAAU,SAAAC,cAAyB,SAAA4B,MAGzB,IAAAzC,IAAcC,IAAAC,EAAA,OAAAE,GAAAsC,YAAA,SAEf,MAAAjC,EAAA,IAAAX,KAAAE,EAAAC,EAAAC,GAIHE,GAAAM,cAASD,GAELH,MAAKqC,QAAOlC,kBAEJ","sources":["index.js"],"sourcesContent":["// Create Book Class\r\nclass Book {\r\n    constructor(title, author, isbn){\r\n        this.title = title;\r\n        this.author = author;\r\n        this.isbn = isbn;\r\n    }\r\n}\r\n\r\n// Create UI Class\r\nclass UI {\r\n\r\n    static displayBooks(){\r\n        const books = Store.getBooks();\r\n\r\n        books.forEach(book => UI.addBookToList(book))\r\n    }\r\n\r\n    static addBookToList(book){\r\n       const list = document.querySelector(\"#book-list\"); \r\n\r\n       const html = `\r\n       <tr data-id=${book.isbn}>\r\n           <td>${book.title}</td>\r\n           <td>${book.author}</td>\r\n           <td>${book.isbn}</td>\r\n           <td><a class=\"btn btn-sm btn-danger delete\"><i class=\"fa fa-trash delete\"/></a></td>\r\n       </tr>\r\n       `\r\n\r\n       list.insertAdjacentHTML(\"beforeend\", html)\r\n   }\r\n\r\n   static clearFields(){\r\n    document.querySelector(\"#book-form\").reset()\r\n   }\r\n\r\n   static deleteBook(book){\r\n    document.querySelector(\"tbody\").removeChild(book);\r\n    Store.removeBook(book.dataset.id);\r\n    UI.renderAlert(\"delete\")\r\n   }\r\n\r\n   static renderAlert(status){\r\n       let message;\r\n\r\n        switch(status){\r\n            case \"success\": \r\n            message = {\r\n                message: \"Book Successfully Added!\",\r\n                style: \"alert-success\"\r\n            }\r\n            break;\r\n\r\n            case \"error\":\r\n                message = {\r\n                    message: \"Please Fill Out All Fields.\",\r\n                    style: \"alert-danger\"\r\n                }\r\n                break;\r\n\r\n            case \"delete\":\r\n                message = {\r\n                    message: \"Book Successfully Removed!\",\r\n                    style: \"alert-warning\"\r\n                }\r\n                break;\r\n\r\n                default: return null;\r\n        };\r\n\r\n       let form = document.querySelector(\"form\");\r\n\r\n       let messageContainer = `<div class=\"alert ${message.style}\" role=\"alert\">\r\n        ${message.message}\r\n       </div>`\r\n\r\n       form.insertAdjacentHTML(\"afterbegin\", messageContainer);\r\n\r\n       setTimeout(() => {\r\n            document.querySelector(\".alert\").remove();\r\n       }, 3000)\r\n   }\r\n\r\n}\r\n\r\n\r\n// Create Store Class for storage\r\nclass Store {\r\n    static getBooks(){\r\n        const starterBooks = [\r\n            {\r\n                title: \"A Catcher in the Rye\",\r\n                author: \"J.D. Salinger\"\r\n            }\r\n        ]\r\n        let books = window.localStorage.getItem(\"books\") || starterBooks;\r\n        if(window.localStorage.getItem(\"books\") === null){\r\n            books = []\r\n        } else {\r\n            books = JSON.parse(window.localStorage.getItem(\"books\"))\r\n        }\r\n        return books;\r\n    }\r\n\r\n    static addBook(book){\r\n        const books = Store.getBooks();\r\n        books.push(book);\r\n        window.localStorage.setItem(\"books\", JSON.stringify(books));\r\n    }\r\n\r\n    static removeBook(isbn){\r\n        const books = Store.getBooks();\r\n\r\n        books.forEach((book, index) => {\r\n            if(book.isbn === isbn){\r\n                books.splice(index, 1)\r\n            }\r\n        })\r\n        window.localStorage.setItem(\"books\", JSON.stringify(books));\r\n    }\r\n}\r\n\r\n// Event: Display Books\r\ndocument.addEventListener(\"DOMContentLoaded\", UI.displayBooks) \r\n\r\n// Event Add a Book\r\ndocument.querySelector(\"#book-form\").addEventListener(\"submit\", (e) => {\r\n    // prevent reload\r\n    e.preventDefault();\r\n\r\n    // get values from form inputs\r\n    const title = document.querySelector(\"#title\").value;\r\n    const author = document.querySelector(\"#author\").value;\r\n    const isbn = document.querySelector(\"#isbn\").value;\r\n\r\n    // return if inputs missing\r\n    if (!title || !author || !isbn) {\r\n        return UI.renderAlert(\"error\");\r\n    }\r\n\r\n    // create book object\r\n    const book = new Book(title, author, isbn)\r\n\r\n    //Add book to UI\r\n    UI.addBookToList(book)\r\n\r\n    // Add book to store\r\n    Store.addBook(book)\r\n\r\n    // Render success message\r\n    UI.renderAlert(\"success\")\r\n    \r\n    //clear fields\r\n    UI.clearFields()\r\n});\r\n\r\n\r\n//Event Remove a Book\r\ndocument.querySelector(\"#book-list\").addEventListener(\"click\", (e) => {\r\n    // select only the button with class \"delete\";\r\n    if(e.target.classList.contains(\"delete\")){\r\n        // target delete button's parent element and pass to UI to remove\r\n        let elementToRemove = e.target.closest(\"tr\");\r\n\r\n        // remove book from UI\r\n        UI.deleteBook(elementToRemove);\r\n    }\r\n})\r\n\r\n\r\n"],"names":["Book","constructor","title","author","isbn","this","UI","static","Store","getBooks","forEach","book","addBookToList","list","document","querySelector","html","insertAdjacentHTML","reset","removeChild","dataset","id","status","message","style","form","messageContainer","remove","books","window","localStorage","getItem","JSON","parse","push","setItem","stringify","index","splice","addEventListener","displayBooks","e","preventDefault","value","renderAlert","addBook"],"version":3,"file":"index.530eda7f.js.map"}